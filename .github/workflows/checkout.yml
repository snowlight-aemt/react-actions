name: workflow name
on: push
jobs:
  foobar:
    runs-on: ubuntu-latest
    steps:
      - id: set-foo  # 1 단계 의 식별자 
        run: echo "foo=bar" >> $GITHUB_OUTPUT       # name=value
      - run: echo ${{ steps.set-foo.outputs.foo }}  # steps.<step_id>.outputs.foo | step_id : steps 의 단계 식별자
  calc:
    runs-on: ubuntu-latest
    steps:
      - id: num1  # 1 단계 의 식별자 
        run: echo "num=$(($RANDOM % 10 + 1))" >> $GITHUB_OUTPUT
      - id: num2  # 1 단계 의 식별자 
        run: echo "num=$(($RANDOM % 10 + 1))" >> $GITHUB_OUTPUT
      - run: echo $(( ${{ steps.num1.outputs.num }} + ${{ steps.num1.outputs.num }} ))
  zeroone:
    runs-on: ubuntu-latest
    steps:
      - id: num
        run: echo "num=$(($RANDOM % 2))" >> $GITHUB_OUTPUT
      - if: steps.num.outputs.num == 0
        run: echo 'zero'
      - if: steps.num.outputs.num == 1
        run: echo 'one'
  ignore:
    runs-on: ubuntu-latest
    steps:
      - id: fail
        continue-on-error: true
        run: exit 1
      - run: echo '[Error] 에러 발생'
  notify:
    runs-on: ubuntu-latest
    steps:
      - id: random
        run: if [[ $(($RANDOM % 2)) == 0 ]]; then exit 0; else exit 1; fi
      - if: ${{ always() }}                    # Github 의 표현식 `${{ always() }}`
        run: echo ${{ steps.random.outcome }}
      - run: echo 'Next Next Run'
